; pid_comparator.ini

[Database]
db_host = FRCDKSPA-0002
db_name = Runtime
db_user = USE_Runtime
db_password = Run_USE_24@
odbc_driver = ODBC Driver 17 for SQL Server
table_name = History
; trusted_connection = no ; ou yes si vous utilisez l'auth Windows

[Tags]
# Tags requis pour le comparateur PID
pv_tag_name = N1N2_lt_4401
mv_tag_name = N1N2_lIC_4401_out
sp_tag_name = N1N2_lIC_4401_SP
pid_enable_tag_name = ACOM_T_COM_XV_02_O		; Mettez le vrai tag pour l'état du PID (Auto/Manu, Actif/Inactif)
                                              ; Si ce tag est 1 ou TRUE quand le PID automate est actif.
                                              ; Laissez vide si non disponible (le PID simulé sera toujours actif)
disturbance_tag_1 =  ; e.g., InletFlow.PV, leave blank if not used
disturbance_tag_2 = N1N2_XV4422_zso

# Optionnel: Paramètres PID historisés si vous voulez que le PID simulé les suive
kp_hist_tag_name = ;		N1N2_lIC_4401_KP 
ti_hist_tag_name = ;		N1N2_lIC_4401_TI
td_hist_tag_name = ;		N1N2_lIC_4401_TD

[DataPeriod]
start_time = 2025-05-31 17:20:0
end_time = 2025-05-31 18:16:00
ww_resolution_ms = 100 ; Ajustez selon la fréquence d'échantillonnage de votre PID et des données

[PIDSimParams]
# Paramètres de simulation du PID (si non lus depuis l'historique via kp_hist_tag_name etc.)
fallback_kp = 3.0
fallback_ti = 180.0  ; en secondes, > 0
fallback_td = 0.0   ; en secondes

# Tsamp pour le calcul du PID simulé (en ms). Doit correspondre à ww_resolution_ms ou être un multiple.
# Idéalement, cela devrait être la période d'échantillonnage à laquelle le PID de l'automate s'exécute.
tsamp_pid_sim_ms = 100 

mv_min = 5.0
mv_max = 25.0
direct_action = true ; True si erreur positive -> augmentation MV. False pour action inverse.

; Comportement du PID simulé si pid_enable_tag_name indique inactif:
; 'freeze_mv': gèle la MV à sa dernière valeur active (comportement actuel de votre classe)
; 'use_inactive_value': force la MV à sim_pid_inactive_mv_value
; Pour l'instant, votre classe PIDController gère le freeze_mv via set_active_state.
; Les autres options nécessiteraient des modifs dans la classe PIDController.

#  ou 'series' (plus complexe, pour une future amélioration si besoin) parallel_kp_global parallel_isa
pid_structure = parallel_isa  ; Ou 'parallel_kp_global'

# Action dérivée: 'on_pv' (sur la mesure) ou 'on_error' (sur l'écart)
derivative_action = on_error           ; Ou 'on_error'

[Output]
# Chemin pour sauvegarder le graphique de comparaison
plot_save_path = ./trace/pid_comparison_plot.png
# Nom de base pour le fichier de log (sans .txt)
log_file_base_name = ./trace/pid_comparator_log